install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/danie/Documents/Assignment/R_Analysis")
refresh()
setwd("C:/Users/danie/Documents/Assignment/R_Analysis/01_Demo")
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
library(jsonlite)
library(jsonlite)
read.csv("demo.csv")
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
x[3]
x[0]
x[1]
x[2]
x[3]
demo_table[3,"Year"]
View(demo_table)
View(demo_table)
demo_table[3,3]
demo_table[3,3]
demo_table$"Vehicle_Class"
View(demo_table)
demo_table$"Vehicle_Class"[2]
View(demo_table)
View(demo_table2)
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
?mutate()
View(demo_table)
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
View(demo_table2)
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=max(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
View(summarize_demo)
?gather()
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
setwd("C:/Users/danie/Documents/Assignment/MechaCar_Statistical_Analysis")
# Peform t-test on Lot 3
t.test(subset(suspension_data,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm)
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm)
### Perform Summary Analysis on suspension coil dataset
# Read in the csv file
suspension_data <- read.csv("Suspension_Coil.csv",stringsAsFactors = F, check.names = F)
# Create the Total Summary
total_summary <- suspension_data %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
# Create the Summary By Lot
lot_summary <- suspension_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
### Suspension Coil T-Tests
# Peform t-test across all Lots
t.test(suspension_data$PSI,mu = 1500)
# Peform t-test on Lot 1
t.test(subset(suspension_data,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# Peform t-test on Lot 2
t.test(subset(suspension_data,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# Peform t-test on Lot 3
t.test(subset(suspension_data,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm)
### Perform Summary Analysis on suspension coil dataset
# Read in the csv file
suspension_data <- read.csv("Suspension_Coil.csv",stringsAsFactors = F, check.names = F)
# Create the Total Summary
total_summary <- suspension_data %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
# Create the Summary By Lot
lot_summary <- suspension_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
### Suspension Coil T-Tests
# Peform t-test across all Lots
t.test(suspension_data$PSI,mu = 1500)
# Peform t-test on Lot 1
t.test(subset(suspension_data,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# Peform t-test on Lot 2
t.test(subset(suspension_data,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# Peform t-test on Lot 3
t.test(subset(suspension_data,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm)
### Perform Summary Analysis on suspension coil dataset
# Read in the csv file
suspension_data <- read.csv("Suspension_Coil.csv",stringsAsFactors = F, check.names = F)
# Create the Total Summary
total_summary <- suspension_data %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
# Create the Summary By Lot
lot_summary <- suspension_data %>% group_by(Manufacturing_Lot) %>%
summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups='keep')
### Suspension Coil T-Tests
# Peform t-test across all Lots
t.test(suspension_data$PSI,mu = 1500)
# Peform t-test on Lot 1
t.test(subset(suspension_data,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# Peform t-test on Lot 2
t.test(subset(suspension_data,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# Peform t-test on Lot 3
t.test(subset(suspension_data,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
View(lot_summary)
View(mecha_data)
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm
library(tidyverse)
### Perform Multiple Regression on MechaCar dataset
# Read in the csv file.
mecha_data <- read.csv("MechaCar_mpg.csv",stringsAsFactors = F,check.names = F)
# Perform a linear regression module
mecha_lm <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mecha_data)
# Determine the p-value and r-squared of the linear regression module.
summary(mecha_lm)
# Peform t-test across all Lots
t.test(suspension_data$PSI,mu = 1500)
# Peform t-test on Lot 1
t.test(subset(suspension_data,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# Peform t-test on Lot 2
t.test(subset(suspension_data,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# Peform t-test on Lot 3
t.test(subset(suspension_data,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
